version: '3.1'

services:
  db:
    image: mysql
    ports:
      - 3306:3306
    env_file:
      - variables.env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 3s
      retries: 5
      start_period: 30s
    volumes:
      - ./mysql-dump:/docker-entrypoint-initdb.d
    networks:
      - spring-mysql

  backend:
    image: joshrand/portfoliobackend:latest
    # build: backend
    restart: always
    env_file:
      - variables.env
    networks:
      - angular-spring
      - spring-mysql
    ports:
      - 8080:8080
    expose:
      - 8080
    depends_on:
      db:
        condition: service_healthy

  frontend:
    # build:
    #  context: frontend
    image: joshrand/portfoliofrontend:latest
    # restart: unless-stopped
    ports:
      - "4200:4200"
    environment:
      - BASE_URL_BACKEND=backend
    networks:
      - angular-spring
    volumes:
      - web-root:/var/www/html
    depends_on:
      - backend
      - webserver 
    expose:
      - 4200
      - 42000 

  webserver:
    image: nginx:mainline-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - web-root:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    networks:
      - angular-spring

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email JoshR.AndersonEng@gmail.com --agree-tos --no-eff-email -d joshrand.xyz -d www.joshrand.xyz

volumes:

  certbot-etc:
  certbot-var:
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: /home/src/portfolio/dhparam/
      o: bind

  web-root:

networks:
  angular-spring: {}
  spring-mysql: {}
