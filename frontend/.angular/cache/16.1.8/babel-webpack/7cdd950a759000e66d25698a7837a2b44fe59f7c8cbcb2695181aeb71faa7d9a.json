{"ast":null,"code":"import { Vec2 } from \"../math/vec2\";\nexport class Particle {\n  constructor(x, y, c) {\n    // position of particle\n    this.pos = new Vec2(0, 0);\n    // velocity of particle\n    this.vel = new Vec2(0, 0);\n    // acceleration vector of particle\n    this.acc = new Vec2(0, 0);\n    // lifetime of particle\n    this.lifetime = 255;\n    // radius of particle (circle)\n    this.radius = 4;\n    // color in 0x000000 format\n    this.color = '000000';\n    this.pos.set(x, y);\n    this.vel.setRandomMinMax2D(-1, 2);\n    this.color = c;\n  }\n  finished() {\n    return this.lifetime > 0;\n  }\n  applyForce(force) {\n    this.acc.add(force);\n  }\n  update() {\n    this.vel.add(this.acc);\n    this.pos.add(this.vel);\n    this.acc.set(0, 0);\n    // cool firecracker effect if we go below 0\n    this.lifetime -= 5;\n    // normal effect\n    // if(this.lifetime > 0)\n    // {\n    //     this.lifetime -= 5;\n    // }\n  }\n\n  show(ctx) {\n    let alpha_factor = this.lifetime / 255;\n    this.radius -= (1 - alpha_factor) * (this.radius - 0.8);\n    ctx.fillStyle = '#' + this.color;\n    ctx.globalAlpha = alpha_factor;\n    ctx.beginPath();\n    ctx.ellipse(this.pos.x_component, this.pos.y_component, this.radius, this.radius, 0, 0, 2 * Math.PI);\n    ctx.fill();\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}