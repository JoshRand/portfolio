{"ast":null,"code":"import { Vec2 } from '../math/vec2';\nimport { Particle } from '../model/particle';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/portfolio.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/progress-spinner\";\nimport * as i7 from \"../technologies/technologies.component\";\nfunction PortfolioComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"mat-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a1) {\n  return [\"/project\", a1];\n};\nconst _c1 = function (a0) {\n  return [a0];\n};\nfunction PortfolioComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\", 10)(2, \"div\", 11);\n    i0.ɵɵlistener(\"click\", function PortfolioComponent_div_6_div_1_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.clickedProject());\n    });\n    i0.ɵɵelementStart(3, \"div\", 12)(4, \"h1\", 13);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\");\n    i0.ɵɵelementStart(9, \"a\", 13);\n    i0.ɵɵtext(10, \"Technologies\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"br\")(12, \"br\");\n    i0.ɵɵelementStart(13, \"p\", 14)(14, \"mat-icon\", 15);\n    i0.ɵɵtext(15, \"memory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"app-technologies\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"div\", 17);\n    i0.ɵɵelement(18, \"img\", 18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"div\", 19)(20, \"div\", 20)(21, \"div\", 12)(22, \"h1\", 13);\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"p\");\n    i0.ɵɵtext(25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"br\");\n    i0.ɵɵelementStart(27, \"a\", 13);\n    i0.ɵɵtext(28, \"Technologies\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(29, \"br\")(30, \"br\");\n    i0.ɵɵelementStart(31, \"p\", 21)(32, \"mat-icon\", 22);\n    i0.ɵɵtext(33, \"memory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"app-technologies\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function PortfolioComponent_div_6_div_1_Template_button_click_35_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.clickedProject());\n    });\n    i0.ɵɵtext(36, \"Learn More\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(37, \"div\", 17);\n    i0.ɵɵelement(38, \"img\", 18);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const project_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(10, _c0, project_r3.id));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(project_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r3.description);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"technologies\", i0.ɵɵpureFunction1(12, _c1, project_r3.technologies));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", project_r3.image, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(project_r3.title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(project_r3.description);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"technologies\", i0.ɵɵpureFunction1(14, _c1, project_r3.technologies));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(16, _c0, project_r3.id));\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"src\", project_r3.image, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction PortfolioComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, PortfolioComponent_div_6_div_1_Template, 39, 18, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.projects);\n  }\n}\nexport let PortfolioComponent = /*#__PURE__*/(() => {\n  class PortfolioComponent {\n    constructor(portfolioService) {\n      this.portfolioService = portfolioService;\n      // Test array for particles\n      this.particles = [];\n      // Particle end boolean\n      this.particle_condition = false;\n      // gravity for particles\n      this.gravity = new Vec2(0, 0.008);\n      // demo project text array \n      this.text_array = new Array(\"Portfolio - Demo Projects\");\n      // animation speed 60hz - 240hz\n      this.animation_speed = 20;\n      this.chosen_array = this.text_array[0];\n      // in ms\n      this.text_delay = 16;\n      // Initial position of Array List\n      this.array_position = 0;\n      // Initial count of current chosen array from array list\n      this.count = 0;\n      this.loading = true;\n    }\n    ngOnInit() {\n      if (this.projects != undefined) this.loading = false;\n      console.log(this.loading + \" \" + this.projects);\n      this.portfolioService.getProjects().subscribe(data => this.projects = data, err => this.errorProjects = `Can't get projects. Got ${err.message}`, () => {\n        this.loading = false;\n        this.onLoadCompleted(this.projects);\n      });\n      ;\n      this.nav_status = true;\n      this.canvas = document.getElementById(\"canvas_portfolio\");\n      this.canvas.width = window.innerWidth;\n      this.canvas.height = window.innerHeight;\n      this.timer_one = setTimeout(() => this.TypeText(), 100);\n      document.getElementById(\"navbar\").style.top = \"0px\";\n      // console.log(this.projects[2]);\n    }\n\n    onLoadCompleted(data) {\n      this.projects = data;\n    }\n    // relocates the navbar to the top of the view after clicking a project\n    // and relocates the scroll of the gridView into original position\n    clickedProject() {\n      // let doc = document.getElementById(\"navbar\").style.top = \"0\";\n      console.log(\"clicked on Learn more\");\n      let gridbar = document.getElementById(\"gridid\");\n      gridbar.scrollIntoView();\n      // console.log(\"Should reset navbar to 0\")\n    }\n\n    TypeText() {\n      try {\n        // retrieves element from document for introduction\n        var introduction_text_holder = document.getElementById(\"demo-project-text\");\n        var rect = document.getElementById(\"particle_cursor\").getBoundingClientRect();\n        // start partical emmission \n        if (this.count == 0 && this.array_position == 0) setTimeout(() => {\n          this.DrawOnCanvas(rect.right - 1, rect.top + 40);\n        }, this.animation_speed);\n        // if the count is not equal to text_array length then ++ count\n        if (this.count <= this.chosen_array.length - 1) {\n          // append string at count position into the html object\n          introduction_text_holder.innerHTML += this.chosen_array[this.count];\n          this.count++;\n        }\n        // if statement for printing the next string in the text_array\n        else if (this.array_position != this.text_array.length && this.count == this.chosen_array.length) {\n          this.array_position++;\n          //console.log(\"selecting new string next position is \" +this.array_position);\n          this.chosen_array = this.text_array[this.array_position];\n          this.count = 0;\n          if (this.array_position != this.text_array.length) introduction_text_holder.innerHTML += \"\";\n        }\n        // trying to recursivly call the typetext method\n        if (this.array_position != this.text_array.length) {\n          this.timeout_two = setTimeout(() => {\n            this.TypeText();\n          }, this.text_delay);\n        } else {\n          this.particle_condition = true;\n        }\n      } catch (error) {}\n    }\n    DrawOnCanvas(x, y) {\n      // Get cursor element for location of its relative top and bottom\n      var cursor_for_particles = document.getElementById(\"particle_cursor\");\n      var ctx = this.canvas.getContext('2d');\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      // fill particle array\n      if (!this.particle_condition) {\n        for (let i = 0; i < 5; i++) {\n          this.particles.push(new Particle(x, y, 'AAFF00'));\n        }\n      }\n      // update each particle / show canvas\n      for (let particle of this.particles) {\n        particle.applyForce(this.gravity);\n        particle.update();\n        particle.show(ctx);\n      }\n      //console.log(\"\"+ this.particles.length + \" Particles\")\n      // delete finished particles\n      for (let i = this.particles.length - 1; i >= 0; i--) {\n        if (!this.particles[i].finished()) {\n          //console.log(\"finished particle in position\" + i);\n          this.particles.splice(i, 1);\n        }\n      }\n      if (this.particles.length != 0) {\n        try {\n          var rect = cursor_for_particles.getBoundingClientRect();\n          //console.log(document.body.scrollTop);\n          setTimeout(() => {\n            this.DrawOnCanvas(rect.left - 1, rect.top + 40);\n          }, this.animation_speed);\n        } catch (error) {}\n      }\n    }\n  }\n  PortfolioComponent.ɵfac = function PortfolioComponent_Factory(t) {\n    return new (t || PortfolioComponent)(i0.ɵɵdirectiveInject(i1.PortfolioService));\n  };\n  PortfolioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PortfolioComponent,\n    selectors: [[\"app-portfolio\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[\"id\", \"gridid\", 1, \"grid\"], [1, \"grid-item1\", 2, \"color\", \"greenyellow\"], [\"id\", \"demo-project-text\", 1, \"demo-project-text\"], [\"id\", \"particle_cursor\", 1, \"particle_cursor\"], [\"class\", \"spinner-div\", 4, \"ngIf\"], [4, \"ngIf\"], [\"id\", \"canvas_portfolio\", \"width\", \"100%\", \"height\", \"100%\", 2, \"overflow-x\", \"hidden\"], [1, \"spinner-div\"], [\"class\", \"grid-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"grid-item\"], [1, \"mobile\"], [1, \"project-card\", 3, \"routerLink\", \"click\"], [1, \"project-text\"], [2, \"color\", \"greenyellow\", \"text-shadow\", \"black 2px 2px 3px\"], [2, \"display\", \"flex\"], [2, \"color\", \"greenyellow\", \"margin-top\", \"3px\"], [3, \"technologies\"], [1, \"image-div\"], [1, \"project-image\", 3, \"src\"], [1, \"desktop\"], [1, \"project-card\"], [2, \"display\", \"flex\", \"object-fit\", \"fill\"], [2, \"color\", \"greenyellow\", \"margin-top\", \"10px\"], [2, \"margin-left\", \"2px\", \"margin-top\", \"2px\", \"margin-right\", \"20px\", \"max-width\", \"50%\", 3, \"technologies\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"learn-more\", 3, \"routerLink\", \"click\"]],\n    template: function PortfolioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"span\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵtext(4, \"_\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, PortfolioComponent_div_5_Template, 2, 0, \"div\", 4);\n        i0.ɵɵtemplate(6, PortfolioComponent_div_6_Template, 2, 1, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"canvas\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading == true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading != true);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.MatButton, i5.MatIcon, i6.MatProgressSpinner, i7.TechnologiesComponent],\n    styles: [\".project-text[_ngcontent-%COMP%]{padding-left:10px;padding-top:10px;padding-bottom:10px;max-width:400px}.project-text[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{font-size:17px;padding-left:0}.project-text[_ngcontent-%COMP%] > p[_ngcontent-%COMP%]{font-size:15px;padding-left:10px}.demo-project-text[_ngcontent-%COMP%]{text-shadow:black 2pt 2pt 3pt}.project-card[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:nowrap;justify-content:space-between}.spinner-div[_ngcontent-%COMP%]{display:block;margin-top:20vw;margin-left:auto;margin-right:auto}canvas[_ngcontent-%COMP%]{position:fixed;overflow:hidden;top:0;left:0;image-rendering:optimizeQuality;pointer-events:none}.particle_cursor[_ngcontent-%COMP%]{opacity:0;text-align:center}.project-card[_ngcontent-%COMP%]:hover   .learn-more[_ngcontent-%COMP%]{opacity:1;transition:ease-in .3s}.learn-more[_ngcontent-%COMP%]{opacity:0;margin-left:80%;margin-top:5%;border-radius:0;border:1pt #673ab7 solid;color:#adff2f;margin-bottom:30px;width:100px;font-size:10px}.learn-more[_ngcontent-%COMP%]:hover{background-color:#292929;border:1pt white solid;color:#fff;transition:.25s}.grid-item[_ngcontent-%COMP%]{border:black 1px solid;position:relative;left:0;animation-name:_ngcontent-%COMP%_slide-in;animation-duration:1s}@keyframes _ngcontent-%COMP%_slide-in{0%{opacity:0;left:-25vw}to{opacity:100%;left:0}}.grid-item[_ngcontent-%COMP%]:hover{border-color:#adff2f}.grid-item1[_ngcontent-%COMP%]{font-size:50px;align-items:center;text-align:center;margin-top:50px;margin-bottom:0;width:auto}.grid[_ngcontent-%COMP%]{grid-template-columns:repeat(2,1fr);grid-row-gap:30px;grid-column-gap:30px;padding-top:70px;padding-bottom:100px;display:grid;grid-auto-flow:dense}.project-image[_ngcontent-%COMP%]{object-fit:contain}@media only screen and (min-width: 1000px){.mobile[_ngcontent-%COMP%]{display:none}.grid[_ngcontent-%COMP%]{grid-template-columns:repeat(1,1fr);max-width:800px;margin-left:auto;margin-right:auto}.grid-item[_ngcontent-%COMP%]{margin-top:10px;width:auto;min-width:250px;min-height:220px;border:1pt black solid;box-shadow:#adff2f 0 0 1px}.grid-item1[_ngcontent-%COMP%]{grid-column:1/1;grid-row:1/1;height:auto}.project-image[_ngcontent-%COMP%]{padding:10px;min-width:200px;min-height:200px;max-width:300px;max-height:300px}}@media only screen and (max-width: 1000px){.demo-project-text[_ngcontent-%COMP%]{text-shadow:black 2pt 2pt 3pt;font-size:30px}.desktop[_ngcontent-%COMP%]{display:none}.grid[_ngcontent-%COMP%]{max-width:500px;grid-template-columns:repeat(1,1fr);align-items:stretch;margin-left:auto;margin-right:auto}.grid-item1[_ngcontent-%COMP%]{height:auto}.grid-item[_ngcontent-%COMP%]{border:1pt black solid;box-shadow:#adff2f 0 0 1px;margin-top:10px}.grid-item1[_ngcontent-%COMP%] > a[_ngcontent-%COMP%]{font-size:calc(15px + 3vw)}p[_ngcontent-%COMP%]{font-size:calc(5px + 3vw)}.project-image[_ngcontent-%COMP%]{padding:10px;max-width:calc(170px + 1vw);max-height:calc(170px + 1vw)}}\"]\n  });\n  return PortfolioComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}