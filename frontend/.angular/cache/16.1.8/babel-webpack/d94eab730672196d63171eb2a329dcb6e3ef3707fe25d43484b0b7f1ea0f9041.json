{"ast":null,"code":"export class Vec2 {\n  constructor(x, y) {\n    // intitalize x/y to 0\n    this.x_component = 0;\n    this.y_component = 0;\n    // initialize to constructor arguments\n    this.x_component = x;\n    this.y_component = y;\n  }\n  setRandomMinMax2D(min, max) {\n    this.x_component = Math.random() * max * 2 + min - 1;\n    this.y_component = Math.random() * max * 2 + min - 1;\n  }\n  random2D() {\n    return new Vec2(Math.random(), Math.random());\n  }\n  set(x, y) {\n    // set the vector components\n    this.x_component = x;\n    this.y_component = y;\n  }\n  copy(rhs) {\n    // set the vector components\n    this.x_component = rhs.x_component;\n    this.y_component = rhs.y_component;\n  }\n  add(rhs) {\n    // add corresponding component\n    this.x_component += rhs.x_component;\n    this.y_component += rhs.y_component;\n  }\n  sub(rhs) {\n    // subtract corresponding component\n    this.x_component -= rhs.x_component;\n    this.y_component -= rhs.y_component;\n  }\n  mult(scalar) {\n    // mult corresponding components\n    this.x_component *= scalar.x_component;\n    this.y_component *= scalar.y_component;\n  }\n  dot(rhs) {\n    // returns scalar product - dot product - inner product\n    return this.x_component * rhs.x_component + this.y_component * rhs.y_component;\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}